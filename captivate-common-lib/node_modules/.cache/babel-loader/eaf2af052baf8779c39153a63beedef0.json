{"ast":null,"code":"import _slicedToArray from\"/projects/lordabbet/repo/captivate-common-lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/projects/lordabbet/repo/captivate-common-lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import{makeStyles,withStyles}from'@material-ui/core/styles';import{Tooltip}from'@material-ui/core';var arrowGenerator=function arrowGenerator(color){return{'&[x-placement*=\"bottom\"] $arrow':{'top':0,'left':0,'marginTop':'-0.95em','width':'2em','height':'1em','&::before':{borderWidth:'0 1em 1em 1em',borderColor:\"transparent transparent \".concat(color,\" transparent\")}},'&[x-placement*=\"top\"] $arrow':{'bottom':0,'left':0,'marginBottom':'-0.95em','width':'2em','height':'1em','&::before':{borderWidth:'1em 1em 0 1em',borderColor:\"\".concat(color,\" transparent transparent transparent\")}},'&[x-placement*=\"right\"] $arrow':{'left':0,'marginLeft':'-0.95em','height':'2em','width':'1em','&::before':{borderWidth:'1em 1em 1em 0',borderColor:\"transparent \".concat(color,\" transparent transparent\")}},'&[x-placement*=\"left\"] $arrow':{'right':0,'marginRight':'-0.95em','height':'2em','width':'1em','&::before':{borderWidth:'1em 0 1em 1em',borderColor:\"transparent transparent transparent \".concat(color)}}};};var useStylesArrow=makeStyles(function(){return{tooltip:{position:'relative',backgroundColor:'#FFF',color:'#222222',boxShadow:'0 2px 8px 0 rgba(180, 183, 185, 0.3)',fontSize:12,fontFamily:'Arial',padding:16,fontWeight:'normal',fontStyle:'normal',fontStretch:'normal',letterSpacing:'normal'},arrow:{'position':'absolute','fontSize':6,'&::before':{content:'\"\"',margin:'auto',display:'block',width:0,height:0,borderStyle:'solid'}},popper:arrowGenerator('#c5cacc')};});export var ArrowTooltip=function ArrowTooltip(props){var _useStylesArrow=useStylesArrow(),arrow=_useStylesArrow.arrow,classes=_objectWithoutProperties(_useStylesArrow,[\"arrow\"]);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),arrowRef=_useState2[0],setArrowRef=_useState2[1];var title=props.title;return React.createElement(Tooltip,Object.assign({classes:classes,placement:\"top\",PopperProps:{popperOptions:{disablePortal:true,modifiers:{arrow:{enabled:Boolean(arrowRef),element:arrowRef}}}},\"data-testid\":\"tooltip\"},props,{title:React.createElement(React.Fragment,null,title,React.createElement(\"span\",{className:arrow,ref:setArrowRef}))}));};export var LightTooltip=withStyles(function(theme){return{tooltip:{backgroundColor:theme.palette.common.white,color:'rgba(0, 0, 0, 0.87)',boxShadow:theme.shadows[1],fontSize:11,minWidth:240,width:'auto',height:80,padding:16,marginBottom:10,borderRadius:5}};})(Tooltip);","map":{"version":3,"sources":["/projects/lordabbet/repo/captivate-common-lib/src/common/Tooltip.js"],"names":["React","useState","makeStyles","withStyles","Tooltip","arrowGenerator","color","borderWidth","borderColor","useStylesArrow","tooltip","position","backgroundColor","boxShadow","fontSize","fontFamily","padding","fontWeight","fontStyle","fontStretch","letterSpacing","arrow","content","margin","display","width","height","borderStyle","popper","ArrowTooltip","props","classes","arrowRef","setArrowRef","title","popperOptions","disablePortal","modifiers","enabled","Boolean","element","LightTooltip","theme","palette","common","white","shadows","minWidth","marginBottom","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport {Tooltip} from '@material-ui/core';\r\n\r\nconst arrowGenerator = (color) => {\r\n    return {\r\n        '&[x-placement*=\"bottom\"] $arrow': {\r\n            'top': 0,\r\n            'left': 0,\r\n            'marginTop': '-0.95em',\r\n            'width': '2em',\r\n            'height': '1em',\r\n            '&::before': {\r\n                borderWidth: '0 1em 1em 1em',\r\n                borderColor: `transparent transparent ${color} transparent`,\r\n            },\r\n        },\r\n        '&[x-placement*=\"top\"] $arrow': {\r\n            'bottom': 0,\r\n            'left': 0,\r\n            'marginBottom': '-0.95em',\r\n            'width': '2em',\r\n            'height': '1em',\r\n            '&::before': {\r\n                borderWidth: '1em 1em 0 1em',\r\n                borderColor: `${color} transparent transparent transparent`,\r\n            },\r\n        },\r\n        '&[x-placement*=\"right\"] $arrow': {\r\n            'left': 0,\r\n            'marginLeft': '-0.95em',\r\n            'height': '2em',\r\n            'width': '1em',\r\n            '&::before': {\r\n                borderWidth: '1em 1em 1em 0',\r\n                borderColor: `transparent ${color} transparent transparent`,\r\n            },\r\n        },\r\n        '&[x-placement*=\"left\"] $arrow': {\r\n            'right': 0,\r\n            'marginRight': '-0.95em',\r\n            'height': '2em',\r\n            'width': '1em',\r\n            '&::before': {\r\n                borderWidth: '1em 0 1em 1em',\r\n                borderColor: `transparent transparent transparent ${color}`,\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nconst useStylesArrow = makeStyles(() => ({\r\n    tooltip: {\r\n        position: 'relative',\r\n        backgroundColor: '#FFF',\r\n        color: '#222222',\r\n        boxShadow: '0 2px 8px 0 rgba(180, 183, 185, 0.3)',\r\n        fontSize: 12,\r\n        fontFamily: 'Arial',\r\n        padding: 16,\r\n        fontWeight: 'normal',\r\n        fontStyle: 'normal',\r\n        fontStretch: 'normal',\r\n        letterSpacing: 'normal',\r\n    },\r\n    arrow: {\r\n        'position': 'absolute',\r\n        'fontSize': 6,\r\n        '&::before': {\r\n            content: '\"\"',\r\n            margin: 'auto',\r\n            display: 'block',\r\n            width: 0,\r\n            height: 0,\r\n            borderStyle: 'solid',\r\n        },\r\n    },\r\n    popper: arrowGenerator('#c5cacc'),\r\n}));\r\n\r\nexport const ArrowTooltip = (props) => {\r\n    const {arrow, ...classes} = useStylesArrow();\r\n    const [arrowRef, setArrowRef] = useState(null);\r\n    const {title} = props;\r\n\r\n    return (\r\n        <Tooltip\r\n            classes={classes}\r\n            placement=\"top\"\r\n            PopperProps={{\r\n                popperOptions: {\r\n                    disablePortal: true,\r\n                    modifiers: {\r\n                        arrow: {\r\n                            enabled: Boolean(arrowRef),\r\n                            element: arrowRef,\r\n                        },\r\n                    },\r\n                },\r\n\r\n            }}\r\n            data-testid=\"tooltip\"\r\n            {...props}\r\n            title={\r\n                <>\r\n                    {title}\r\n                    <span className={arrow} ref={setArrowRef} />\r\n                </>\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport const LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 11,\r\n        minWidth: 240,\r\n        width: 'auto',\r\n        height: 80,\r\n        padding: 16,\r\n        marginBottom: 10,\r\n        borderRadius: 5,\r\n    },\r\n}))(Tooltip);\r\n"]},"metadata":{},"sourceType":"module"}