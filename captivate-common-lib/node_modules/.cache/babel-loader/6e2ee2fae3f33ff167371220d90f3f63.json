{"ast":null,"code":"import React from'react';import{Grid,Button}from'@material-ui/core';import useStyles from'./styles';/**\r\n * @visibleName Button\r\n */var LaButton=function LaButton(props){var isoutlined=props.isoutlined,islink=props.islink,label=props.label,Icon=props.Icon,iconcolor=props.iconcolor,size=props.size,style=props.style;var classes=useStyles();var buttonClass=function buttonClass(){if(size==='small'){return isoutlined?\"\".concat(classes.outlined,\" \").concat(classes.outlinedSmall):islink?\"\".concat(classes.link,\" \").concat(classes.linkSmall):\"\".concat(classes.contained,\" \").concat(classes.containedSmall);}else{return isoutlined?classes.outlined:islink?classes.link:classes.contained;}};return React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,xs:12},React.createElement(Button,Object.assign({size:size,className:buttonClass(),variant:isoutlined?'outlined':islink?'':'contained',startIcon:!!Icon&&React.createElement(Icon,{htmlColor:iconcolor})},props,{style:style,\"data-testid\":\"laButton\"}),React.createElement(\"span\",{className:!!Icon&&(size==='small'?classes.labelSmall:classes.label),\"data-testid\":\"buttonLabel\"},label))));};LaButton.defaultProps={size:'large'};export default LaButton;","map":{"version":3,"sources":["/projects/lordabbet/repo/captivate-common-lib/src/common/LaButton/index.js"],"names":["React","Grid","Button","useStyles","LaButton","props","isoutlined","islink","label","Icon","iconcolor","size","style","classes","buttonClass","outlined","outlinedSmall","link","linkSmall","contained","containedSmall","labelSmall","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAAQC,IAAR,CAAcC,MAAd,KAA2B,mBAA3B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAEA;;GAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,IACjBC,CAAAA,UADiB,CAC0CD,KAD1C,CACjBC,UADiB,CACLC,MADK,CAC0CF,KAD1C,CACLE,MADK,CACGC,KADH,CAC0CH,KAD1C,CACGG,KADH,CACUC,IADV,CAC0CJ,KAD1C,CACUI,IADV,CACgBC,SADhB,CAC0CL,KAD1C,CACgBK,SADhB,CAC2BC,IAD3B,CAC0CN,KAD1C,CAC2BM,IAD3B,CACiCC,KADjC,CAC0CP,KAD1C,CACiCO,KADjC,CAExB,GAAMC,CAAAA,OAAO,CAAGV,SAAS,EAAzB,CACA,GAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAIH,IAAI,GAAK,OAAb,CAAsB,CAClB,MAAOL,CAAAA,UAAU,WACVO,OAAO,CAACE,QADE,aACUF,OAAO,CAACG,aADlB,EAEbT,MAAM,WACCM,OAAO,CAACI,IADT,aACiBJ,OAAO,CAACK,SADzB,YAECL,OAAO,CAACM,SAFT,aAEsBN,OAAO,CAACO,cAF9B,CAFV,CAKH,CAND,IAMO,CACH,MAAOd,CAAAA,UAAU,CACbO,OAAO,CAACE,QADK,CAEbR,MAAM,CACFM,OAAO,CAACI,IADN,CAEFJ,OAAO,CAACM,SAJhB,CAKH,CACJ,CAdD,CAgBA,MACI,qBAAC,IAAD,EAAM,SAAS,KAAf,EACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACI,oBAAC,MAAD,gBACI,IAAI,CAAER,IADV,CAEI,SAAS,CAAEG,WAAW,EAF1B,CAGI,OAAO,CACHR,UAAU,CACN,UADM,CAENC,MAAM,CACF,EADE,CAEF,WARhB,CAUI,SAAS,CAAE,CAAC,CAACE,IAAF,EAAU,oBAAC,IAAD,EAAM,SAAS,CAAEC,SAAjB,EAVzB,EAWQL,KAXR,EAYI,KAAK,CAAEO,KAZX,CAaI,cAAY,UAbhB,GAeI,4BAAM,SAAS,CAAE,CAAC,CAACH,IAAF,GAAWE,IAAI,GAAK,OAAT,CAAmBE,OAAO,CAACQ,UAA3B,CAAwCR,OAAO,CAACL,KAA3D,CAAjB,CAAoF,cAAY,aAAhG,EAA+GA,KAA/G,CAfJ,CADJ,CADJ,CADJ,CAuBH,CA1CD,CAiDAJ,QAAQ,CAACkB,YAAT,CAAwB,CACpBX,IAAI,CAAE,OADc,CAAxB,CAIA,cAAeP,CAAAA,QAAf","sourcesContent":["import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport {Grid, Button} from '@material-ui/core';\r\n\r\nimport useStyles from './styles';\r\n\r\n/**\r\n * @visibleName Button\r\n */\r\nconst LaButton = (props) => {\r\n    const {isoutlined, islink, label, Icon, iconcolor, size, style} = props;\r\n    const classes = useStyles();\r\n    const buttonClass = () => {\r\n        if (size === 'small') {\r\n            return isoutlined ?\r\n                `${classes.outlined} ${classes.outlinedSmall}` :\r\n                islink ?\r\n                    `${classes.link} ${classes.linkSmall}`:\r\n                    `${classes.contained} ${classes.containedSmall}`;\r\n        } else {\r\n            return isoutlined ?\r\n                classes.outlined :\r\n                islink ?\r\n                    classes.link :\r\n                    classes.contained;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    size={size}\r\n                    className={buttonClass()}\r\n                    variant={\r\n                        isoutlined ?\r\n                            'outlined' :\r\n                            islink ?\r\n                                '' :\r\n                                'contained'\r\n                    }\r\n                    startIcon={!!Icon && <Icon htmlColor={iconcolor} />}\r\n                    {...props}\r\n                    style={style}\r\n                    data-testid='laButton'\r\n                >\r\n                    <span className={!!Icon && (size === 'small' ? classes.labelSmall : classes.label)} data-testid=\"buttonLabel\">{label}</span>\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nLaButton.propTypes = {\r\n    size: PropTypes.string,\r\n    style: PropTypes.object,\r\n};\r\n\r\nLaButton.defaultProps = {\r\n    size: 'large',\r\n};\r\n\r\nexport default LaButton;\r\n\r\n"]},"metadata":{},"sourceType":"module"}