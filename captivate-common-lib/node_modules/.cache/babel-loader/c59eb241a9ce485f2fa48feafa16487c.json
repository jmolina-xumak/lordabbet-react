{"ast":null,"code":"import React from'react';import*as ReactGA from'react-ga';import{Grid}from'@material-ui/core';import{GA_KEY,GA_PROD_KEY}from'../../../public/constants';import{mobileView}from'../../common';var RoleSelection=function RoleSelection(props){var classes=props.classes,roles=props.roles,setShowRoleSelector=props.setShowRoleSelector,setCookie=props.setCookie;ReactGA.initialize(window.isProd?GA_PROD_KEY:GA_KEY,{testMode:process.env.NODE_ENV==='test'});ReactGA.pageview(window.location.pathname+window.location.search);var roleSelected=function roleSelected(role){setShowRoleSelector(false);setCookie('LA_ROLETYPE',role.name,{path:'/',maxAge:30*24*60*60});ReactGA.event({category:role.name,action:'Role Selected',label:'User clicked the role button'});if(role.url!==undefined&&role.url!==''){window.location.assign(window.location.origin+role.url);}};var isMobile=mobileView();return React.createElement(Grid,{item:true,xs:12,className:\"\".concat(isMobile?classes.selectionContainerMobile:'')},roles&&roles.map(function(role,i){return React.createElement(React.Fragment,null,React.createElement(Grid,{container:true,key:\"role-\".concat(i),className:\"\".concat(classes.selectionBox,\" \").concat(isMobile?classes.selectionBoxMobile:''),onClick:function onClick(){return roleSelected(role);},onKeyPress:function onKeyPress(){return roleSelected(role);},role:\"button\",tabIndex:\"0\",\"aria-label\":\"role selector button\",\"data-testid\":\"roleSelectionContainer-\".concat(i)},React.createElement(Grid,{item:true,xs:11,className:\"selector\",\"data-testid\":\"roleName-\".concat(i)},role.name),React.createElement(Grid,{item:true,xs:1,className:classes.rightArrow})),isMobile&&i<roles.length-1?React.createElement(\"hr\",{style:{margin:'15.5px 16px 15.5px',border:'none',height:1,color:'#c5cacc',backgroundColor:'#c5cacc'}}):null);}));};export default RoleSelection;","map":{"version":3,"sources":["/projects/lordabbet/repo/captivate-common-lib/src/components/RoleSelector/RoleSelection.js"],"names":["React","ReactGA","Grid","GA_KEY","GA_PROD_KEY","mobileView","RoleSelection","props","classes","roles","setShowRoleSelector","setCookie","initialize","window","isProd","testMode","process","env","NODE_ENV","pageview","location","pathname","search","roleSelected","role","name","path","maxAge","event","category","action","label","url","undefined","assign","origin","isMobile","selectionContainerMobile","map","i","selectionBox","selectionBoxMobile","rightArrow","length","margin","border","height","color","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as ReactGA from 'react-ga';\r\nimport {Grid} from '@material-ui/core';\r\n\r\nimport {GA_KEY, GA_PROD_KEY} from '../../../public/constants';\r\nimport {mobileView} from '../../common';\r\n\r\nconst RoleSelection = (props) => {\r\n    const {classes, roles, setShowRoleSelector, setCookie} = props;\r\n    ReactGA.initialize(window.isProd ? GA_PROD_KEY : GA_KEY, {\r\n        testMode: process.env.NODE_ENV === 'test',\r\n    });\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\n    const roleSelected = (role) => {\r\n        setShowRoleSelector(false);\r\n        setCookie('LA_ROLETYPE', role.name, {\r\n            path: '/',\r\n            maxAge: 30 * 24 * 60 * 60,\r\n        });\r\n        ReactGA.event({\r\n            category: role.name,\r\n            action: 'Role Selected',\r\n            label: 'User clicked the role button',\r\n        });\r\n        if (role.url !== undefined && role.url !== '') {\r\n            window.location.assign(window.location.origin + role.url);\r\n        }\r\n    };\r\n\r\n    const isMobile = mobileView();\r\n\r\n    return (\r\n        <Grid item xs={12} className={`${isMobile ? classes.selectionContainerMobile : ''}`}>\r\n            {roles &&\r\n                roles.map((role, i) => (\r\n                    <>\r\n                        <Grid\r\n                            container\r\n                            key={`role-${i}`}\r\n                            className={`${classes.selectionBox} ${isMobile ? classes.selectionBoxMobile : ''}`}\r\n                            onClick={() => roleSelected(role)}\r\n                            onKeyPress={() => roleSelected(role)}\r\n                            role=\"button\"\r\n                            tabIndex=\"0\"\r\n                            aria-label=\"role selector button\"\r\n                            data-testid={`roleSelectionContainer-${i}`}\r\n                        >\r\n                            <Grid item xs={11} className={`selector`} data-testid={`roleName-${i}`}>\r\n                                {role.name}\r\n                            </Grid>\r\n                            <Grid item xs={1} className={classes.rightArrow} />\r\n                        </Grid>\r\n                        {isMobile && i<roles.length-1? (<hr\r\n                            style={{\r\n                                margin: '15.5px 16px 15.5px',\r\n                                border: 'none',\r\n                                height: 1,\r\n                                color: '#c5cacc',\r\n                                backgroundColor: '#c5cacc',\r\n                            }}/>) : (null)}\r\n                    </>\r\n                ))}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nRoleSelection.propTypes = {\r\n    /** Role information  */\r\n    roles: PropTypes.array,\r\n    /** style classes  */\r\n    classes: PropTypes.object,\r\n    /** show role selector flag  */\r\n    setShowRoleSelector: PropTypes.func,\r\n    /** set cookie function  */\r\n    setCookie: PropTypes.func,\r\n};\r\n\r\nexport default RoleSelection;\r\n"]},"metadata":{},"sourceType":"module"}