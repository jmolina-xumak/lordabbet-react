{"ast":null,"code":"import _slicedToArray from\"/projects/lordabbet/repo/captivate-common-lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment}from'react';import AuthorBlockView from'./AuthorBlockView';import{ArrowTooltip}from'../../common/Tooltip';import{Avatar}from'@material-ui/core';import PersonOutlineSharpIcon from'@material-ui/icons/PersonOutlineSharp';var HeaderAuthors=function HeaderAuthors(props){var authors=props.authors,count=props.count,classes=props.classes;var _useState=useState(),_useState2=_slicedToArray(_useState,2),authorDetails=_useState2[0],setAuthorDetails=_useState2[1];var profileView=function profileView(profileUrl){if(!!profileUrl){window.location.assign(window.location.origin+profileUrl);}};return React.createElement(React.Fragment,null,count===1&&React.createElement(AuthorBlockView,{authors:authors,classes:classes,count:count,isHeader:true}),count>1&&authors.map(function(author,index){return React.createElement(Fragment,{key:\"author-\".concat(index)},React.createElement(\"div\",{className:\"\".concat(index===0?'':classes.overlappedAuthor),style:{zIndex:\"\".concat(10-index)},\"data-testid\":\"authorHeaderContainer\"},React.createElement(ArrowTooltip,{placement:\"top\",interactive:true,\"data-testid\":\"authorTooltip\",title:React.createElement(\"div\",{className:classes.tooltipContainer},React.createElement(\"div\",null,React.createElement(\"span\",{className:classes.tooltipName,onClick:function onClick(){return profileView(authorDetails.profileUrl);},onKeyPress:function onKeyPress(){return profileView(authorDetails.profileUrl);},role:\"button\",tabIndex:0,\"data-testid\":\"authorTooltipName-\".concat(index)},authorDetails&&authorDetails.name),React.createElement(\"span\",{className:classes.tooltipQualification,\"data-testid\":\"authorTooltipQualification-\".concat(index)},authorDetails&&authorDetails.qualification)),authorDetails&&!!authorDetails.designation&&React.createElement(\"div\",{className:classes.tooltipDesignation,\"data-testid\":\"authorTooltipDesignation-\".concat(index)},authorDetails&&authorDetails.designation))},React.createElement(\"div\",{onMouseEnter:function onMouseEnter(){return setAuthorDetails(author);},\"data-testid\":\"authorIcon-\".concat(index),role:\"button\",tabIndex:\"0\"},!!author.imageUrl?React.createElement(Avatar,{alt:author.name,src:author.imageUrl,className:\"\".concat(classes.headerImage,\" \").concat(classes.hoverHeaderImage),\"data-testid\":\"authorMultiImage-\".concat(index)}):React.createElement(\"div\",{className:\"\".concat(classes.avatarImage,\" \").concat(classes.hoverHeaderImage),\"data-testid\":\"authorMultiPlaceholderImage-\".concat(index)},React.createElement(PersonOutlineSharpIcon,{htmlColor:\"#777777\",className:classes.image}))))));}));};HeaderAuthors.defaultProps={};export default HeaderAuthors;","map":{"version":3,"sources":["/projects/lordabbet/repo/captivate-common-lib/src/components/Authors/HeaderAuthors.js"],"names":["React","useState","Fragment","AuthorBlockView","ArrowTooltip","Avatar","PersonOutlineSharpIcon","HeaderAuthors","props","authors","count","classes","authorDetails","setAuthorDetails","profileView","profileUrl","window","location","assign","origin","map","author","index","overlappedAuthor","zIndex","tooltipContainer","tooltipName","name","tooltipQualification","qualification","designation","tooltipDesignation","imageUrl","headerImage","hoverHeaderImage","avatarImage","image","defaultProps"],"mappings":"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","sourcesContent":["import React, {useState, Fragment} from 'react';\r\n\r\nimport AuthorBlockView from './AuthorBlockView';\r\nimport {ArrowTooltip} from '../../common/Tooltip';\r\nimport {Avatar} from '@material-ui/core';\r\nimport PersonOutlineSharpIcon from '@material-ui/icons/PersonOutlineSharp';\r\n\r\nconst HeaderAuthors = (props) => {\r\n    const {authors, count, classes} = props;\r\n    const [authorDetails, setAuthorDetails] = useState();\r\n\r\n    const profileView = (profileUrl) => {\r\n        if (!!profileUrl) {\r\n            window.location.assign(window.location.origin + profileUrl);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {count === 1 && (\r\n                <AuthorBlockView\r\n                    authors={authors}\r\n                    classes={classes}\r\n                    count={count}\r\n                    isHeader\r\n                />\r\n            )}\r\n            {count > 1 &&\r\n                authors.map((author, index) => (\r\n                    <Fragment key={`author-${index}`}>\r\n                        <div\r\n                            className={`${\r\n                                index === 0 ? '' : classes.overlappedAuthor\r\n                            }`}\r\n                            style={{zIndex: `${10 - index}`}}\r\n                            data-testid=\"authorHeaderContainer\"\r\n                        >\r\n                            <ArrowTooltip\r\n                                placement=\"top\"\r\n                                interactive\r\n                                data-testid=\"authorTooltip\"\r\n                                title={\r\n                                    <div className={classes.tooltipContainer}>\r\n                                        <div>\r\n                                            <span\r\n                                                className={classes.tooltipName}\r\n                                                onClick={() =>\r\n                                                    profileView(\r\n                                                        authorDetails.profileUrl\r\n                                                    )\r\n                                                }\r\n                                                onKeyPress={() =>\r\n                                                    profileView(\r\n                                                        authorDetails.profileUrl\r\n                                                    )\r\n                                                }\r\n                                                role=\"button\"\r\n                                                tabIndex={0}\r\n                                                data-testid={`authorTooltipName-${index}`}\r\n                                            >\r\n                                                {authorDetails &&\r\n                                                    authorDetails.name}\r\n                                            </span>\r\n                                            <span\r\n                                                className={\r\n                                                    classes.tooltipQualification\r\n                                                }\r\n                                                data-testid={`authorTooltipQualification-${index}`}\r\n                                            >\r\n                                                {authorDetails &&\r\n                                                    authorDetails.qualification}\r\n                                            </span>\r\n                                        </div>\r\n                                        {authorDetails &&\r\n                                            !!authorDetails.designation && (\r\n                                            <div\r\n                                                className={\r\n                                                    classes.tooltipDesignation\r\n                                                }\r\n                                                data-testid={`authorTooltipDesignation-${index}`}\r\n                                            >\r\n                                                {authorDetails &&\r\n                                                        authorDetails.designation}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                }\r\n                            >\r\n                                <div\r\n                                    onMouseEnter={() =>\r\n                                        setAuthorDetails(author)\r\n                                    }\r\n                                    data-testid={`authorIcon-${index}`}\r\n                                    role=\"button\"\r\n                                    tabIndex=\"0\"\r\n                                >\r\n                                    {!!author.imageUrl ?\r\n                                        <Avatar alt={author.name} src={author.imageUrl} className={`${classes.headerImage} ${classes.hoverHeaderImage}`} data-testid={`authorMultiImage-${index}`}/> :\r\n                                        <div\r\n                                            className={`${classes.avatarImage} ${classes.hoverHeaderImage}`}\r\n                                            data-testid={`authorMultiPlaceholderImage-${index}`}\r\n                                        >\r\n                                            <PersonOutlineSharpIcon\r\n                                                htmlColor=\"#777777\"\r\n                                                className={classes.image}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </ArrowTooltip>\r\n                        </div>\r\n                    </Fragment>\r\n                ))}\r\n        </>\r\n    );\r\n};\r\n\r\nHeaderAuthors.propTypes = {};\r\n\r\nHeaderAuthors.defaultProps = {};\r\n\r\nexport default HeaderAuthors;\r\n"]},"metadata":{},"sourceType":"module"}