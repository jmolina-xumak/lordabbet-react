{"ast":null,"code":"import _slicedToArray from\"/projects/lordabbet/repo/captivate-common-lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/projects/lordabbet/repo/captivate-common-lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from'react';import Select,{components}from'react-select';import ArrowDropDownSharpIcon from'@material-ui/icons/ArrowDropDownSharp';import PerfectScrollbar from'react-perfect-scrollbar';import'react-perfect-scrollbar/dist/css/styles.css';import Flag from'./Flag';/**\r\n * @visibleName GeoSelector\r\n */var cleanseForOptions=function cleanseForOptions(data){return data&&data.map(function(country){return{value:{name:country.name,roles:country.roles},label:country.displayName};});};var CustomDropdownIndicator=function CustomDropdownIndicator(props){return React.createElement(components.DropdownIndicator,props,React.createElement(ArrowDropDownSharpIcon,null));};var CustomMenuList=function CustomMenuList(props){return React.createElement(\"div\",{style:{height:140}},React.createElement(PerfectScrollbar,null,props.children));};var formatOptionLabel=function formatOptionLabel(_ref){var value=_ref.value,label=_ref.label;return React.createElement(\"div\",{\"data-testid\":\"geoselector-option-\".concat(value),style:{display:'flex',justifyContent:'left',flexDirection:'row'}},React.createElement(\"div\",{style:{display:'flex',justifyContent:'center',flexDirection:'column'}},React.createElement(Flag,{country:value.name,label:label})),React.createElement(\"div\",{style:{display:'flex',justifyContent:'center',flexDirection:'column'}},label));};export var customStyles={control:function control(base,state){return _objectSpread({},base,{'backgroundColor':'#ffffff','border':'solid 1px #c5cacc','borderRadius':0,'height':48,'minHeight':48,'boxShadow':0,'borderColor':state.isFocused?'#0a855b':base.borderColor,'&:hover':{borderColor:state.isFocused?'#0a855b':base.borderColor}});},menuList:function menuList(base){return _objectSpread({},base,{padding:0});},option:function option(base,state){return _objectSpread({},base,{'fontFamily':'Arial','fontSize':14,'fontWeight':'normal','fontStretch':'normal','fontStyle':'normal','lineHeight':1.71,'letterSpacing':0.14,'color':'#333333','height':48,'minHeight':48,'paddingTop':12,'paddingBottom':12,'backgroundColor':state.isFocused||state.isSelected?'#f9f9fa':'#ffffff','&:active':{backgroundColor:'#f9f9fa'}});},menu:function menu(base){return _objectSpread({},base,{margin:0,border:'solid 1px #c5cacc',borderRadius:0,backgroundColor:'#ffffff'});},singleValue:function singleValue(base){return _objectSpread({},base,{fontFamily:'Arial',fontSize:14,fontWeight:'normal',fontStretch:'normal',fontStyle:'normal',lineHeight:1.71,letterSpacing:0.14,color:'#333333'});}};var GeoSelector=function GeoSelector(props){var data=props.data,defaultCountry=props.defaultCountry;var _useState=useState(function(){var selection=data&&data.filter(function(country){return country.name===defaultCountry;})[0];return{value:{name:selection.name,roles:selection.roles},label:selection.displayName};}),_useState2=_slicedToArray(_useState,2),selectValue=_useState2[0],setSelectValue=_useState2[1];return React.createElement(Select,{menuIsOpen:props.menuIsOpen,value:selectValue,isSearchable:false,onChange:function onChange(val){setSelectValue(val);if(!!props.onChange){props.onChange(val);}},formatOptionLabel:formatOptionLabel,options:cleanseForOptions(data),styles:customStyles,components:{DropdownIndicator:CustomDropdownIndicator,IndicatorSeparator:null,Placeholder:'',MenuList:CustomMenuList}});};GeoSelector.defaultProps={menuIsOpen:undefined};export default GeoSelector;","map":{"version":3,"sources":["/projects/lordabbet/repo/captivate-common-lib/src/components/RoleSelector/GeoSelector.js"],"names":["React","useState","Select","components","ArrowDropDownSharpIcon","PerfectScrollbar","Flag","cleanseForOptions","data","map","country","value","name","roles","label","displayName","CustomDropdownIndicator","props","CustomMenuList","height","children","formatOptionLabel","display","justifyContent","flexDirection","customStyles","control","base","state","isFocused","borderColor","menuList","padding","option","isSelected","backgroundColor","menu","margin","border","borderRadius","singleValue","fontFamily","fontSize","fontWeight","fontStretch","fontStyle","lineHeight","letterSpacing","color","GeoSelector","defaultCountry","selection","filter","selectValue","setSelectValue","menuIsOpen","val","onChange","DropdownIndicator","IndicatorSeparator","Placeholder","MenuList","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport Select, {components} from 'react-select';\r\nimport ArrowDropDownSharpIcon from '@material-ui/icons/ArrowDropDownSharp';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n\r\nimport Flag from './Flag';\r\n\r\n/**\r\n * @visibleName GeoSelector\r\n */\r\n\r\nconst cleanseForOptions = (data) => {\r\n    return data && data.map((country) => {\r\n        return {\r\n            value: {\r\n                name: country.name,\r\n                roles: country.roles,\r\n            },\r\n            label: country.displayName,\r\n        };\r\n    });\r\n};\r\n\r\nconst CustomDropdownIndicator = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <ArrowDropDownSharpIcon />\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nconst CustomMenuList = (props) => {\r\n    return (\r\n        <div style={{height: 140}}>\r\n            <PerfectScrollbar>\r\n                {props.children}\r\n            </PerfectScrollbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst formatOptionLabel = ({value, label}) => (\r\n    <div\r\n        data-testid={`geoselector-option-${value}`}\r\n        style={{display: 'flex', justifyContent: 'left', flexDirection: 'row'}}\r\n    >\r\n        <div style={{display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\r\n            <Flag country={value.name} label={label}/>\r\n        </div>\r\n        <div style={{display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\r\n            {label}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport const customStyles = {\r\n    control: (base, state) => ({\r\n        ...base,\r\n        'backgroundColor': '#ffffff',\r\n        'border': 'solid 1px #c5cacc',\r\n        'borderRadius': 0,\r\n        'height': 48,\r\n        'minHeight': 48,\r\n        'boxShadow': 0,\r\n        'borderColor': state.isFocused ? '#0a855b' : base.borderColor,\r\n        '&:hover': {\r\n            borderColor: state.isFocused ? '#0a855b' : base.borderColor,\r\n        },\r\n    }),\r\n    menuList: (base) => ({\r\n        ...base,\r\n        padding: 0,\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        'fontFamily': 'Arial',\r\n        'fontSize': 14,\r\n        'fontWeight': 'normal',\r\n        'fontStretch': 'normal',\r\n        'fontStyle': 'normal',\r\n        'lineHeight': 1.71,\r\n        'letterSpacing': 0.14,\r\n        'color': '#333333',\r\n        'height': 48,\r\n        'minHeight': 48,\r\n        'paddingTop': 12,\r\n        'paddingBottom': 12,\r\n        'backgroundColor': (state.isFocused || state.isSelected) ? '#f9f9fa' : '#ffffff',\r\n        '&:active': {\r\n            backgroundColor: '#f9f9fa',\r\n        },\r\n    }),\r\n    menu: (base) => ({\r\n        ...base,\r\n        margin: 0,\r\n        border: 'solid 1px #c5cacc',\r\n        borderRadius: 0,\r\n        backgroundColor: '#ffffff',\r\n    }),\r\n    singleValue: (base) => ({\r\n        ...base,\r\n        fontFamily: 'Arial',\r\n        fontSize: 14,\r\n        fontWeight: 'normal',\r\n        fontStretch: 'normal',\r\n        fontStyle: 'normal',\r\n        lineHeight: 1.71,\r\n        letterSpacing: 0.14,\r\n        color: '#333333',\r\n    }),\r\n};\r\n\r\nconst GeoSelector = (props) => {\r\n    const {data, defaultCountry} = props;\r\n\r\n    const [selectValue, setSelectValue] = useState(() => {\r\n        const selection = data && data.filter((country) => country.name === defaultCountry)[0];\r\n        return {value: {\r\n            name: selection.name,\r\n            roles: selection.roles,\r\n        },\r\n        label: selection.displayName};\r\n    });\r\n\r\n    return (\r\n        <Select\r\n            menuIsOpen={props.menuIsOpen}\r\n            value={selectValue}\r\n            isSearchable={false}\r\n            onChange={(val) => {\r\n                setSelectValue(val);\r\n                if (!!props.onChange) {\r\n                    props.onChange(val);\r\n                }\r\n            }}\r\n            formatOptionLabel={formatOptionLabel}\r\n            options={cleanseForOptions(data)}\r\n            styles={customStyles}\r\n            components={{\r\n                DropdownIndicator: CustomDropdownIndicator,\r\n                IndicatorSeparator: null,\r\n                Placeholder: '',\r\n                MenuList: CustomMenuList,\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nGeoSelector.defaultProps = {\r\n    menuIsOpen: undefined,\r\n};\r\n\r\nGeoSelector.propTypes = {\r\n    onChange: PropTypes.func,\r\n    menuIsOpen: PropTypes.bool,\r\n    defaultCountry: PropTypes.string,\r\n};\r\n\r\nexport default GeoSelector;\r\n"]},"metadata":{},"sourceType":"module"}