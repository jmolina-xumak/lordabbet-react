{"ast":null,"code":"var _jsxFileName = \"/projects/lordabbet/react-repo/captivate-common-lib/src/common/LaButton/index.js\";\nimport React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Grid, Button } from '@material-ui/core';\nimport useStyles from './styles';\n/**\r\n * @visibleName Button\r\n */\n\nconst LaButton = props => {\n  const isoutlined = props.isoutlined,\n        islink = props.islink,\n        label = props.label,\n        Icon = props.Icon,\n        iconcolor = props.iconcolor,\n        size = props.size,\n        style = props.style;\n  const classes = useStyles();\n\n  const buttonClass = () => {\n    if (size === 'small') {\n      return isoutlined ? `${classes.outlined} ${classes.outlinedSmall}` : islink ? `${classes.link} ${classes.linkSmall}` : `${classes.contained} ${classes.containedSmall}`;\n    } else {\n      return isoutlined ? classes.outlined : islink ? classes.link : classes.contained;\n    }\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Button, Object.assign({\n    size: size,\n    className: buttonClass(),\n    variant: isoutlined ? 'outlined' : islink ? '' : 'contained',\n    startIcon: !!Icon && React.createElement(Icon, {\n      htmlColor: iconcolor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })\n  }, props, {\n    style: style,\n    \"data-testid\": \"laButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: !!Icon && (size === 'small' ? classes.labelSmall : classes.label),\n    \"data-testid\": \"buttonLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, label))));\n};\n\nLaButton.propTypes = {\n  size: PropTypes.string,\n  style: PropTypes.object\n};\nLaButton.defaultProps = {\n  size: 'large'\n};\nexport default LaButton;","map":{"version":3,"sources":["/projects/lordabbet/react-repo/captivate-common-lib/src/common/LaButton/index.js"],"names":["React","PropTypes","Grid","Button","useStyles","LaButton","props","isoutlined","islink","label","Icon","iconcolor","size","style","classes","buttonClass","outlined","outlinedSmall","link","linkSmall","contained","containedSmall","labelSmall","propTypes","string","object","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,mBAA3B;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AAEA;;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,QACjBC,UADiB,GAC0CD,KAD1C,CACjBC,UADiB;AAAA,QACLC,MADK,GAC0CF,KAD1C,CACLE,MADK;AAAA,QACGC,KADH,GAC0CH,KAD1C,CACGG,KADH;AAAA,QACUC,IADV,GAC0CJ,KAD1C,CACUI,IADV;AAAA,QACgBC,SADhB,GAC0CL,KAD1C,CACgBK,SADhB;AAAA,QAC2BC,IAD3B,GAC0CN,KAD1C,CAC2BM,IAD3B;AAAA,QACiCC,KADjC,GAC0CP,KAD1C,CACiCO,KADjC;AAExB,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AACA,QAAMW,WAAW,GAAG,MAAM;AACtB,QAAIH,IAAI,KAAK,OAAb,EAAsB;AAClB,aAAOL,UAAU,GACZ,GAAEO,OAAO,CAACE,QAAS,IAAGF,OAAO,CAACG,aAAc,EADhC,GAEbT,MAAM,GACD,GAAEM,OAAO,CAACI,IAAK,IAAGJ,OAAO,CAACK,SAAU,EADnC,GAED,GAAEL,OAAO,CAACM,SAAU,IAAGN,OAAO,CAACO,cAAe,EAJvD;AAKH,KAND,MAMO;AACH,aAAOd,UAAU,GACbO,OAAO,CAACE,QADK,GAEbR,MAAM,GACFM,OAAO,CAACI,IADN,GAEFJ,OAAO,CAACM,SAJhB;AAKH;AACJ,GAdD;;AAgBA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAER,IADV;AAEI,IAAA,SAAS,EAAEG,WAAW,EAF1B;AAGI,IAAA,OAAO,EACHR,UAAU,GACN,UADM,GAENC,MAAM,GACF,EADE,GAEF,WARhB;AAUI,IAAA,SAAS,EAAE,CAAC,CAACE,IAAF,IAAU,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVzB,KAWQL,KAXR;AAYI,IAAA,KAAK,EAAEO,KAZX;AAaI,mBAAY,UAbhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAeI;AAAM,IAAA,SAAS,EAAE,CAAC,CAACH,IAAF,KAAWE,IAAI,KAAK,OAAT,GAAmBE,OAAO,CAACQ,UAA3B,GAAwCR,OAAO,CAACL,KAA3D,CAAjB;AAAoF,mBAAY,aAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+GA,KAA/G,CAfJ,CADJ,CADJ,CADJ;AAuBH,CA1CD;;AA4CAJ,QAAQ,CAACkB,SAAT,GAAqB;AACjBX,EAAAA,IAAI,EAAEX,SAAS,CAACuB,MADC;AAEjBX,EAAAA,KAAK,EAAEZ,SAAS,CAACwB;AAFA,CAArB;AAKApB,QAAQ,CAACqB,YAAT,GAAwB;AACpBd,EAAAA,IAAI,EAAE;AADc,CAAxB;AAIA,eAAeP,QAAf","sourcesContent":["import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport {Grid, Button} from '@material-ui/core';\r\n\r\nimport useStyles from './styles';\r\n\r\n/**\r\n * @visibleName Button\r\n */\r\nconst LaButton = (props) => {\r\n    const {isoutlined, islink, label, Icon, iconcolor, size, style} = props;\r\n    const classes = useStyles();\r\n    const buttonClass = () => {\r\n        if (size === 'small') {\r\n            return isoutlined ?\r\n                `${classes.outlined} ${classes.outlinedSmall}` :\r\n                islink ?\r\n                    `${classes.link} ${classes.linkSmall}`:\r\n                    `${classes.contained} ${classes.containedSmall}`;\r\n        } else {\r\n            return isoutlined ?\r\n                classes.outlined :\r\n                islink ?\r\n                    classes.link :\r\n                    classes.contained;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    size={size}\r\n                    className={buttonClass()}\r\n                    variant={\r\n                        isoutlined ?\r\n                            'outlined' :\r\n                            islink ?\r\n                                '' :\r\n                                'contained'\r\n                    }\r\n                    startIcon={!!Icon && <Icon htmlColor={iconcolor} />}\r\n                    {...props}\r\n                    style={style}\r\n                    data-testid='laButton'\r\n                >\r\n                    <span className={!!Icon && (size === 'small' ? classes.labelSmall : classes.label)} data-testid=\"buttonLabel\">{label}</span>\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nLaButton.propTypes = {\r\n    size: PropTypes.string,\r\n    style: PropTypes.object,\r\n};\r\n\r\nLaButton.defaultProps = {\r\n    size: 'large',\r\n};\r\n\r\nexport default LaButton;\r\n\r\n"]},"metadata":{},"sourceType":"module"}