{"ast":null,"code":"import React,{Fragment}from'react';import{Grid,Avatar}from'@material-ui/core';import PersonOutlineSharpIcon from'@material-ui/icons/PersonOutlineSharp';var AuthorBlockView=function AuthorBlockView(props){var authors=props.authors,classes=props.classes,count=props.count,isHeader=props.isHeader;var profileView=function profileView(profileUrl){if(profileUrl!==undefined&&profileUrl!==''){window.location.assign(window.location.origin+profileUrl);}};return React.createElement(React.Fragment,null,authors.map(function(author,index){return React.createElement(Fragment,{key:\"author-\".concat(index)},React.createElement(Grid,{item:true,xs:12},React.createElement(Grid,{container:true,className:classes.blockContainer},React.createElement(Grid,{item:true,xs:12},React.createElement(Grid,{container:true,className:classes.imageContainer,onClick:function onClick(){return profileView(author.profileUrl);},onKeyPress:function onKeyPress(){return profileView(author.profileUrl);},role:\"button\",tabIndex:0,\"data-testid\":\"authorBlockContainer\"},!!author.imageUrl?React.createElement(Avatar,{src:author.imageUrl,alt:author.name,className:classes.headerImage,\"data-testid\":\"authorImage-\".concat(index)}):React.createElement(\"div\",{className:classes.avatarImage,\"data-testid\":\"authorPlaceholderImage-\".concat(index)},React.createElement(PersonOutlineSharpIcon,{htmlColor:\"#777777\",className:classes.image}))),React.createElement(Grid,{container:true,className:classes.infoContainer},React.createElement(Grid,{item:true,xs:12},React.createElement(Grid,{container:true,className:classes.headerNameContainer},React.createElement(\"span\",{className:classes.headerName,onClick:function onClick(){return profileView(author.profileUrl);},onKeyPress:function onKeyPress(){return profileView(author.profileUrl);},role:\"button\",tabIndex:0,\"data-testid\":\"authorName-\".concat(index)},author.name),React.createElement(\"span\",{className:classes.headerQualification,\"data-testid\":\"authorQualification-\".concat(index)},author.qualification)),React.createElement(Grid,{container:true,className:classes.headerDesignation,\"data-testid\":\"authorDesignation-\".concat(index)},author.designation),count===1&&!isHeader&&React.createElement(React.Fragment,null,React.createElement(Grid,{container:true,className:classes.headerDescription,\"data-testid\":\"authorDescription-\".concat(index)},author.description),React.createElement(Grid,{container:true,className:classes.readMore,onClick:function onClick(){return profileView(author.profileUrl);},onKeyPress:function onKeyPress(){return profileView(author.profileUrl);},\"data-testid\":\"authorReadMore-\".concat(index)},\"Read More\")))))),!isHeader&&React.createElement(\"hr\",{\"data-testid\":\"authorSeperator-\".concat(index),style:{border:'none',height:1,color:'#c5cacc',backgroundColor:'#c5cacc'}})));}));};AuthorBlockView.defaultProps={};export default AuthorBlockView;","map":{"version":3,"sources":["/projects/lordabbet/repo/captivate-common-lib/src/components/Authors/AuthorBlockView.js"],"names":["React","Fragment","Grid","Avatar","PersonOutlineSharpIcon","AuthorBlockView","props","authors","classes","count","isHeader","profileView","profileUrl","undefined","window","location","assign","origin","map","author","index","blockContainer","imageContainer","imageUrl","name","headerImage","avatarImage","image","infoContainer","headerNameContainer","headerName","headerQualification","qualification","headerDesignation","designation","headerDescription","description","readMore","border","height","color","backgroundColor","defaultProps"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {Grid, Avatar} from '@material-ui/core';\r\nimport PersonOutlineSharpIcon from '@material-ui/icons/PersonOutlineSharp';\r\n\r\nconst AuthorBlockView = (props) => {\r\n    const {authors, classes, count, isHeader} = props;\r\n\r\n    const profileView = (profileUrl) => {\r\n        if (profileUrl !== undefined && profileUrl !== '') {\r\n            window.location.assign(window.location.origin + profileUrl);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {authors.map((author, index) => (\r\n                <Fragment key={`author-${index}`}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container className={classes.blockContainer}>\r\n                            <Grid item xs={12}>\r\n                                <Grid\r\n                                    container\r\n                                    className={classes.imageContainer}\r\n                                    onClick={() =>\r\n                                        profileView(author.profileUrl)\r\n                                    }\r\n                                    onKeyPress={() =>\r\n                                        profileView(author.profileUrl)\r\n                                    }\r\n                                    role=\"button\"\r\n                                    tabIndex={0}\r\n                                    data-testid=\"authorBlockContainer\"\r\n                                >\r\n                                    {!!author.imageUrl ? <Avatar\r\n                                        src={author.imageUrl}\r\n                                        alt={author.name}\r\n                                        className={classes.headerImage}\r\n                                        data-testid={`authorImage-${index}`}\r\n                                    />: <div\r\n                                        className={classes.avatarImage}\r\n                                        data-testid={`authorPlaceholderImage-${index}`}\r\n                                    >\r\n                                        <PersonOutlineSharpIcon\r\n                                            htmlColor=\"#777777\"\r\n                                            className={classes.image}\r\n                                        />\r\n                                    </div>\r\n                                    }\r\n\r\n                                </Grid>\r\n                                <Grid\r\n                                    container\r\n                                    className={classes.infoContainer}\r\n                                >\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            className={\r\n                                                classes.headerNameContainer\r\n                                            }\r\n                                        >\r\n                                            <span\r\n                                                className={classes.headerName}\r\n                                                onClick={() =>\r\n                                                    profileView(\r\n                                                        author.profileUrl\r\n                                                    )\r\n                                                }\r\n                                                onKeyPress={() =>\r\n                                                    profileView(\r\n                                                        author.profileUrl\r\n                                                    )\r\n                                                }\r\n                                                role=\"button\"\r\n                                                tabIndex={0}\r\n                                                data-testid={`authorName-${index}`}\r\n                                            >\r\n                                                {author.name}\r\n                                            </span>\r\n                                            <span\r\n                                                className={\r\n                                                    classes.headerQualification\r\n                                                }\r\n                                                data-testid={`authorQualification-${index}`}\r\n                                            >\r\n                                                {author.qualification}\r\n                                            </span>\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            container\r\n                                            className={\r\n                                                classes.headerDesignation\r\n                                            }\r\n                                            data-testid={`authorDesignation-${index}`}\r\n                                        >\r\n                                            {author.designation}\r\n                                        </Grid>\r\n                                        {count === 1 && !isHeader && (\r\n                                            <>\r\n                                                <Grid\r\n                                                    container\r\n                                                    className={\r\n                                                        classes.headerDescription\r\n                                                    }\r\n                                                    data-testid={`authorDescription-${index}`}\r\n                                                >\r\n                                                    {author.description}\r\n                                                </Grid>\r\n                                                <Grid\r\n                                                    container\r\n                                                    className={classes.readMore}\r\n                                                    onClick={() =>\r\n                                                        profileView(\r\n                                                            author.profileUrl\r\n                                                        )\r\n                                                    }\r\n                                                    onKeyPress={() =>\r\n                                                        profileView(\r\n                                                            author.profileUrl\r\n                                                        )\r\n                                                    }\r\n                                                    data-testid={`authorReadMore-${index}`}\r\n                                                >\r\n                                                    Read More\r\n                                                </Grid>\r\n                                            </>\r\n                                        )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {!isHeader && (\r\n                            <hr\r\n                                data-testid={`authorSeperator-${index}`}\r\n                                style={{\r\n                                    border: 'none',\r\n                                    height: 1,\r\n                                    color: '#c5cacc',\r\n                                    backgroundColor: '#c5cacc',\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </Grid>\r\n                </Fragment>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nAuthorBlockView.propTypes = {};\r\n\r\nAuthorBlockView.defaultProps = {};\r\n\r\nexport default AuthorBlockView;\r\n"]},"metadata":{},"sourceType":"module"}